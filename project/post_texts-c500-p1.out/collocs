0.0219873	•_	•_
0.00858305	in	the
0.00778063	the	same
0.00687402	I	am
0.00609804	---	---
0.00607957	of	the
0.00567827	I	have
0.00557	Thank	you
0.00549403	is	not
0.00517139	(most	recent
0.0049441	how	to
0.00492325	need	to
0.00490582	you	can
0.00472681	last):•_	File
0.0046688	if	you
0.00458064	I	think
0.00452701	call	last):•_
0.00452701	recent	call
0.00447576	will	be
0.00388267	to	use
0.00381834	A	N
0.00356305	this	course
0.00349977	must	be
0.00344331	number	of
0.00341705	I	was
0.00332364	want	to
0.00324914	know	how
0.00314986	very	much
0.00311468	you	have
0.00310162	have	to
0.00308009	when	I
0.00300669	would	be
0.00299223	line	1,
0.00297356	at	least
0.00290444	there	is
0.00279171	to	be
0.00277861	for	your
0.00272595	know	what
0.00271547	Python	3.3.2
0.00270578	is	a
0.00269499	(str)	->
0.00265843	this	is
0.00265831	the	function
0.00257796	represents	whether
0.00256244	don't	understand
0.00256244	You	must
0.00256153	I	don't
0.002525	the	first
0.0024989	Start	Menu
0.00239026	a	non-nucleotide
0.002355	have	been
0.00235478	don't	know
0.00234894	to	do
0.00234634	DNA	sequence
0.00228896	You	can
0.00226763	If	you
0.0022584	instead	of
0.00223677	Example	:
0.00221869	one	of
0.00221218	it	will
0.00214371	to	make
0.00213693	long	as
0.00210916	tell	me
0.00209441	for	the
0.00208571	an	error
0.00207857	as	a
0.00207638	the	code
0.00205773	N	A
0.00205541	This	is
0.00204145	->	All
0.00203899	from	the
0.00200735	my	code
0.00200463	I	don•_t
0.00199511	Python	3.3
0.00198236	Thanks	for
0.00198137	->	int
0.0019811	the	last
0.00197717	not	sure
0.00197717	does	not
0.00196939	with	the
0.00196722	I	can
0.00194014	I	got
0.00193934	1,	in
0.00193018	char	in
0.00193007	to	get
0.00189195	should	be
0.00188433	it	would
0.00188158	24	hours
0.00184447	Menu	->
0.00184108	the	second
0.0018108	For	example,
0.00180216	use	the
0.00179454	understand	what
0.00179358	be	a
0.0017758	at	the
0.00176575	get	the
0.00175475	on	the
0.00175343	dna:•_	•_
0.00175343	<module>•_	•_
0.00171374	is	my
0.00171107	•_	•_return
0.00169281	it	was
0.00168816	an	example
0.00168478	a	lot
0.00168268	it	is
0.00167871	able	to
0.00164215	a	little
0.00164049	to	learn
0.00163283	•_	return
0.00163067	I	had
0.00163067	I	tried
0.00162612	value	of
0.00161681	in	this
0.00161628	press	enter
0.00160621	but	I
0.00158175	list	of
0.00157049	a	variable
0.00156038	but	it
0.00155732	try	to
0.00153825	out	of
0.00151164	the	answer
0.00151078	is	the
0.00149504	what	I
0.001494	wrong	with
0.00147293	I'm	not
0.00147051	in	dna:•_
0.00147051	in	<module>•_
0.00147035	on	my
0.00146583	that	I
0.00145255	variable	that
0.00144904	the	number
0.00144618	when	i
0.00143725	the	right
0.00142572	should	have
0.00142274	I	just
0.0014183	am	getting
0.00141444	set	to
0.00141431	thanks	for
0.0013862	all	the
0.00138615	the	following
0.00137545	you	want
0.00136432	the	course
0.0013627	True	if
0.00134906	I	did
0.00134749	empty	string
0.00134296	supposed	to
0.00133384	I	can't
0.00132327	more	than
0.0013229	2	*
0.00132232	it	should
0.00131156	if	char
0.00130651	+=	1
0.00130554	the	correct
0.0013006	seem	to
0.00129451	'F',	'J',
0.0012944	may	be
0.00129297	after	the
0.00129021	for	i
0.00128266	with	a
0.00127787	I	need
0.00126924	Return	the
0.00126729	and	then
0.00126271	trying	to
0.00125754	the	file
0.00125439	final	exam
0.00124898	didn't	work
0.00124845	to	the
0.00123981	they	are
0.00123905	so	far
0.00123863	that	is
0.00122857	means	that
0.00122413	the	value
0.0012216	'J',	'A',
0.0012216	'A',	'J',
0.00121937	I	guess
0.00121824	code	is
0.00121354	you	are
0.00121112	for	a
0.00120037	such	as
0.00119953	There	are
0.00119281	'S',	'S',
0.00119103	in	my
0.00118742	•_	if
0.00118147	expression	evaluates
0.00117664	It	is
0.00117594	while	loop
0.00117574	much	for
0.0011737	answer	is
0.00117269	please	explain
0.00117025	3.3	->
0.00116802	a	good
0.00116746	gives	me
0.00116412	as	an
0.00115371	the	result
0.00114927	that	represents
0.0011452	problem	with
0.00114435	for	char
0.00114322	the	next
0.00114075	a	valid
0.0011372	in	a
0.00113403	the	IDLE
0.00113335	It	seems
0.00112973	3.3.2	Windows
0.00112956	got	it
0.00112764	to	know
0.00112612	it	works
0.00112357	have	found
0.00111907	+	1
0.00111381	and	it
0.00111358	must	have
0.00110948	might	be
0.00110596	did	not
0.00110507	has	been
0.00109743	outside	of
0.001096	order	to
0.001096	evaluates	to
0.0010941	I	cannot
0.00109202	What	is
0.00108865	we	have
0.00108121	a	string
0.00107355	are	not
0.0010724	**	2
0.00107185	to	True
0.00106922	other	courses
0.00106002	i	in
0.00104266	there	are
0.00104242	each	character
0.00104199	marked	as
0.00104124	with	my
0.00103941	the	While
0.00103109	I	know
0.00102738	what	is
0.00101662	the	problem
0.001016	can	be
0.00101572	be	able
0.00101535	do	not
0.00101315	a	different
0.00101273	char	==
0.000995039	how	can
0.000988963	please	post
0.00097993	n	+
0.000979119	to	write
0.000978969	keep	getting
0.000975122	n	%
0.000973544	second	loop
0.000967379	you	find
0.000964587	•_•_•_	•_
0.000964275	•_•_•_	>>>
0.000962841	i	run
0.000960606	if	we
0.000957426	it	means
0.000956675	difference	between
0.000956675	Good	luck
0.000953743	got	this
0.000953343	->	str
0.000947823	way	to
0.000947809	If	you're
0.000939815	feel	like
0.000935238	going	to
0.000932161	looking	at
0.000923289	your	program
0.000922205	you	mean
0.000920789	don•_t	think
0.000918654	•_	dna
0.000916198	syntax	error.
0.000916198	someone	explain
0.000913438	anyone	help
0.000912646	as	long
0.000911293	val	<
0.000908462	print	function
0.000907027	looks	like
0.000905775	when	you
0.000905297	dna	+
0.000901987	come	back
0.00090108	by	the
0.000900614	the	end
0.000900075	i	get
0.000897722	if	anyone
0.00089742	a	list
0.000895861	length	of
0.000895847	seems	to
0.000891191	'''	(str)
0.000890616	out	how
0.000889809	I	could
0.000884211	function	called
0.0008833	x	=
0.000877638	i	got
0.000877396	As	long
0.000876752	return	the
0.000873737	letter	in
0.000871973	sure	what
0.000870487	you	tell
0.000870103	str	Return
0.000868293	don•_t	know
0.000864334	it	in
0.000862746	the	video
0.000861989	your	code
0.000859035	Windows	7
0.000858101	I	should
0.000855944	right	answer
0.000851586	is	wrong
0.000851423	an	'A',
0.000846802	Can	you
0.0008447	to	test
0.000840296	your	help.
0.000837176	can't	see
0.000836348	using	the
0.000835863	The	problem
0.000830358	had	the
0.000827798	For	now,
0.000824787	will	not
0.000820233	elif	char
0.000817803	programming	language
0.000817422	say	that
0.000814499	on	this
0.00081307	python	shell
0.00081278	I	do
0.000812585	will	return
0.000812574	be	told
0.00081212	to	run
0.000810309	like	to
0.000810076	the	videos
0.000809013	*	2
0.000809013	%	2
0.000807088	something	that
0.000804619	int	Return
0.000804262	time	in
0.000802095	non-nucleotide	was
0.000801916	basic	programming
0.000795344	I	put
0.000793727	if	n
0.000793058	-	You
0.000792133	to	see
0.000791615	0	else
0.000790786	#	if
0.000789646	version	without
0.00078694	in	order
0.000786337	I	used
0.000781939	didn't	get
0.000781939	when	you're
0.000779755	can't	seem
0.000778288	for	line
0.000775973	because	it's
0.000773889	values	will
0.000773252	don't	get
0.000772698	whether	a
0.000768988	you	could
0.000768437	Return	True
0.000764799	=	dna
0.000764799	dna	=
0.000762838	•_	•_•_•_
0.000762097	same	as
0.000761481	it.	You
0.000760049	to	keep
0.000758272	why	I
0.000757371	as	well
0.000753809	print	statement
0.000753238	i	have
0.000750844	==	0
0.000749226	a	new
0.000747228	these	functions
0.00074297	I	actually
0.00074264	go	to
0.00074264	to	change
0.00074264	to	add
0.000739186	a	syntax
0.000738807	to	find
0.000737613	think	about
0.000736683	make	it
0.000736311	that	i
0.00073576	I'm	getting
0.000735482	a	function
0.000735225	you	very
0.000734499	don't	have
0.000734308	doing	something
0.000732746	and	I
0.000729218	been	working
0.000728734	it	seems
0.000726286	to	False
0.000726239	I	found
0.000725499	understand	how
0.000723688	first	time
0.000723296	:	>>>
0.000722595	line	in
0.000721193	such	a
0.000721124	me,	I
0.000719965	how	much
0.000718472	can	only
0.000718157	in	Python
0.000717204	you	don't
0.000715953	=	1
0.000713873	see	it
0.000712042	know	if
0.000711661	help	with
0.000711064	if	it's
0.000707221	to	complete
0.000707045	am	not
0.000706298	must	know
0.000700878	not	be
0.000700459	the	integer
0.000700459	over	the
0.000699841	my	function
0.000698125	/	2
0.000698125	else	3
0.000697978	has	a
0.000697439	I	feel
0.000697416	=	0
0.000696875	for	me,
0.000695425	getting	back
0.000695267	->	Python
0.000694216	also	check
0.000693975	Yes.	If
0.00069254	*	n
0.0006922	it	didn't
0.0006911	has	to
0.000689837	this	question
0.000689025	a	given
0.000687285	will	have
0.000687177	else:	#
0.00068491	example	where
0.00068247	returns	the
0.000680187	found	a
0.00067917	I	will
0.000678049	False	if
0.000677927	looking	for
0.000675513	>>>	print
0.00067453	let	me
0.00067453	told	me
0.000672108	done	in
0.000672055	My	question
0.000670557	now	I
0.000670026	am	trying
0.000669624	3	*
0.000669616	You	need
0.00066956	whether	you
0.0006695	are	two
0.000665803	do	you
0.000664934	me	a
0.000662762	this	code
0.000662618	index	of
0.000661637	What	does
0.0006587	lot	of
0.0006587	end	of
0.000656161	get	a
0.000655668	can	give
0.000654812	my	assignment
0.000654128	You	are
0.00065305	result	of
0.000651614	line	!=
0.000648083	code	with
0.000647882	help	you
0.000646792	so	I
0.000646547	think	I
0.000646108	Start	->
0.000645728	have	not
0.000644433	shows	me
0.000643236	work	for
0.000639164	might	have
0.000638461	I	hope
0.000638098	it	has
0.000636922	I	get
0.000636308	the	other
0.000635728	look	at
0.000635728	result	value
0.000634905	function	which
0.000634777	so	it
0.000633076	so	you
0.000632671	help	me
0.000630823	find	something
0.000629769	now	and
0.000628731	last	letter
0.000627319	was	getting
0.000625585	your	while
0.000625222	This	will
0.000624558	to	solve
0.000622363	was	marked
0.000622344	shell	and
0.000621802	I	downloaded
0.000621389	false	false
0.000618382	you	will
0.000617094	add	more
0.000616026	because	I
0.000614618	would	like
0.00061078	as	it
0.00061051	sequence	of
0.000609983	the	question
0.000608662	correct	answer
0.000608548	but	when
0.000607899	to	pass
0.000606964	version	of
0.000606885	that's	what
0.000606634	am	having
0.000606292	I	keep
0.000605631	your	link
0.000605084	if	I
0.000603316	n	=
0.000601208	You	might
0.000601163	exercises	and
0.000600208	practice	exercises
0.000599113	will	see
